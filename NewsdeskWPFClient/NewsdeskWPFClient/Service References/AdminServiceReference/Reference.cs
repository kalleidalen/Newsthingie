//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NewsdeskWPFClient.AdminServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CategoryToClient", Namespace="http://schemas.datacontract.org/2004/07/DomainClasses")]
    [System.SerializableAttribute()]
    public partial class CategoryToClient : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSelectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSelected {
            get {
                return this.IsSelectedField;
            }
            set {
                if ((this.IsSelectedField.Equals(value) != true)) {
                    this.IsSelectedField = value;
                    this.RaisePropertyChanged("IsSelected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthorToClient", Namespace="http://schemas.datacontract.org/2004/07/DomainClasses")]
    [System.SerializableAttribute()]
    public partial class AuthorToClient : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsApprovedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEditorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSelectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsApproved {
            get {
                return this.IsApprovedField;
            }
            set {
                if ((this.IsApprovedField.Equals(value) != true)) {
                    this.IsApprovedField = value;
                    this.RaisePropertyChanged("IsApproved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEditor {
            get {
                return this.IsEditorField;
            }
            set {
                if ((this.IsEditorField.Equals(value) != true)) {
                    this.IsEditorField = value;
                    this.RaisePropertyChanged("IsEditor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSelected {
            get {
                return this.IsSelectedField;
            }
            set {
                if ((this.IsSelectedField.Equals(value) != true)) {
                    this.IsSelectedField = value;
                    this.RaisePropertyChanged("IsSelected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Author", Namespace="http://schemas.datacontract.org/2004/07/DomainClasses")]
    [System.SerializableAttribute()]
    public partial class Author : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NewsdeskWPFClient.AdminServiceReference.Article[] ArticlesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsApprovedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEditorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NewsdeskWPFClient.AdminServiceReference.Article[] Articles {
            get {
                return this.ArticlesField;
            }
            set {
                if ((object.ReferenceEquals(this.ArticlesField, value) != true)) {
                    this.ArticlesField = value;
                    this.RaisePropertyChanged("Articles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsApproved {
            get {
                return this.IsApprovedField;
            }
            set {
                if ((this.IsApprovedField.Equals(value) != true)) {
                    this.IsApprovedField = value;
                    this.RaisePropertyChanged("IsApproved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEditor {
            get {
                return this.IsEditorField;
            }
            set {
                if ((this.IsEditorField.Equals(value) != true)) {
                    this.IsEditorField = value;
                    this.RaisePropertyChanged("IsEditor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Article", Namespace="http://schemas.datacontract.org/2004/07/DomainClasses")]
    [System.SerializableAttribute()]
    public partial class Article : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArticleBodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NewsdeskWPFClient.AdminServiceReference.Author[] AuthorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NewsdeskWPFClient.AdminServiceReference.Category[] CategoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsApprovedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PreambleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PublishDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdatedDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArticleBody {
            get {
                return this.ArticleBodyField;
            }
            set {
                if ((object.ReferenceEquals(this.ArticleBodyField, value) != true)) {
                    this.ArticleBodyField = value;
                    this.RaisePropertyChanged("ArticleBody");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NewsdeskWPFClient.AdminServiceReference.Author[] Authors {
            get {
                return this.AuthorsField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorsField, value) != true)) {
                    this.AuthorsField = value;
                    this.RaisePropertyChanged("Authors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NewsdeskWPFClient.AdminServiceReference.Category[] Categories {
            get {
                return this.CategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoriesField, value) != true)) {
                    this.CategoriesField = value;
                    this.RaisePropertyChanged("Categories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsApproved {
            get {
                return this.IsApprovedField;
            }
            set {
                if ((this.IsApprovedField.Equals(value) != true)) {
                    this.IsApprovedField = value;
                    this.RaisePropertyChanged("IsApproved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Preamble {
            get {
                return this.PreambleField;
            }
            set {
                if ((object.ReferenceEquals(this.PreambleField, value) != true)) {
                    this.PreambleField = value;
                    this.RaisePropertyChanged("Preamble");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PublishDate {
            get {
                return this.PublishDateField;
            }
            set {
                if ((this.PublishDateField.Equals(value) != true)) {
                    this.PublishDateField = value;
                    this.RaisePropertyChanged("PublishDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdatedDate {
            get {
                return this.UpdatedDateField;
            }
            set {
                if ((this.UpdatedDateField.Equals(value) != true)) {
                    this.UpdatedDateField = value;
                    this.RaisePropertyChanged("UpdatedDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Category", Namespace="http://schemas.datacontract.org/2004/07/DomainClasses")]
    [System.SerializableAttribute()]
    public partial class Category : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NewsdeskWPFClient.AdminServiceReference.Article[] ArticlesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NewsdeskWPFClient.AdminServiceReference.Subscriber[] SubscribersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NewsdeskWPFClient.AdminServiceReference.Article[] Articles {
            get {
                return this.ArticlesField;
            }
            set {
                if ((object.ReferenceEquals(this.ArticlesField, value) != true)) {
                    this.ArticlesField = value;
                    this.RaisePropertyChanged("Articles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NewsdeskWPFClient.AdminServiceReference.Subscriber[] Subscribers {
            get {
                return this.SubscribersField;
            }
            set {
                if ((object.ReferenceEquals(this.SubscribersField, value) != true)) {
                    this.SubscribersField = value;
                    this.RaisePropertyChanged("Subscribers");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Subscriber", Namespace="http://schemas.datacontract.org/2004/07/DomainClasses")]
    [System.SerializableAttribute()]
    public partial class Subscriber : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NewsdeskWPFClient.AdminServiceReference.Category[] CategoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NewsdeskWPFClient.AdminServiceReference.Category[] Categories {
            get {
                return this.CategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoriesField, value) != true)) {
                    this.CategoriesField = value;
                    this.RaisePropertyChanged("Categories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArticleToClient", Namespace="http://schemas.datacontract.org/2004/07/DomainClasses")]
    [System.SerializableAttribute()]
    public partial class ArticleToClient : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApproveIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArticleBodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsApprovedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSelectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PreambleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdatedDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApproveId {
            get {
                return this.ApproveIdField;
            }
            set {
                if ((this.ApproveIdField.Equals(value) != true)) {
                    this.ApproveIdField = value;
                    this.RaisePropertyChanged("ApproveId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArticleBody {
            get {
                return this.ArticleBodyField;
            }
            set {
                if ((object.ReferenceEquals(this.ArticleBodyField, value) != true)) {
                    this.ArticleBodyField = value;
                    this.RaisePropertyChanged("ArticleBody");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsApproved {
            get {
                return this.IsApprovedField;
            }
            set {
                if ((this.IsApprovedField.Equals(value) != true)) {
                    this.IsApprovedField = value;
                    this.RaisePropertyChanged("IsApproved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSelected {
            get {
                return this.IsSelectedField;
            }
            set {
                if ((this.IsSelectedField.Equals(value) != true)) {
                    this.IsSelectedField = value;
                    this.RaisePropertyChanged("IsSelected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Preamble {
            get {
                return this.PreambleField;
            }
            set {
                if ((object.ReferenceEquals(this.PreambleField, value) != true)) {
                    this.PreambleField = value;
                    this.RaisePropertyChanged("Preamble");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdatedDate {
            get {
                return this.UpdatedDateField;
            }
            set {
                if ((this.UpdatedDateField.Equals(value) != true)) {
                    this.UpdatedDateField = value;
                    this.RaisePropertyChanged("UpdatedDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AdminServiceReference.INewsdeskService")]
    public interface INewsdeskService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/SendNotDeliveredMail", ReplyAction="http://tempuri.org/INewsdeskService/SendNotDeliveredMailResponse")]
        void SendNotDeliveredMail();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/SendNotDeliveredMail", ReplyAction="http://tempuri.org/INewsdeskService/SendNotDeliveredMailResponse")]
        System.Threading.Tasks.Task SendNotDeliveredMailAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/SendEmailAccountCreated", ReplyAction="http://tempuri.org/INewsdeskService/SendEmailAccountCreatedResponse")]
        string SendEmailAccountCreated(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/SendEmailAccountCreated", ReplyAction="http://tempuri.org/INewsdeskService/SendEmailAccountCreatedResponse")]
        System.Threading.Tasks.Task<string> SendEmailAccountCreatedAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/SendEmailToEditorNewAccountCreated", ReplyAction="http://tempuri.org/INewsdeskService/SendEmailToEditorNewAccountCreatedResponse")]
        string SendEmailToEditorNewAccountCreated();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/SendEmailToEditorNewAccountCreated", ReplyAction="http://tempuri.org/INewsdeskService/SendEmailToEditorNewAccountCreatedResponse")]
        System.Threading.Tasks.Task<string> SendEmailToEditorNewAccountCreatedAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/GetAllCategories", ReplyAction="http://tempuri.org/INewsdeskService/GetAllCategoriesResponse")]
        NewsdeskWPFClient.AdminServiceReference.CategoryToClient[] GetAllCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/GetAllCategories", ReplyAction="http://tempuri.org/INewsdeskService/GetAllCategoriesResponse")]
        System.Threading.Tasks.Task<NewsdeskWPFClient.AdminServiceReference.CategoryToClient[]> GetAllCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/AddCategory", ReplyAction="http://tempuri.org/INewsdeskService/AddCategoryResponse")]
        NewsdeskWPFClient.AdminServiceReference.CategoryToClient AddCategory(string NewCategoryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/AddCategory", ReplyAction="http://tempuri.org/INewsdeskService/AddCategoryResponse")]
        System.Threading.Tasks.Task<NewsdeskWPFClient.AdminServiceReference.CategoryToClient> AddCategoryAsync(string NewCategoryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/EditCategory", ReplyAction="http://tempuri.org/INewsdeskService/EditCategoryResponse")]
        NewsdeskWPFClient.AdminServiceReference.CategoryToClient EditCategory(NewsdeskWPFClient.AdminServiceReference.CategoryToClient category, string newName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/EditCategory", ReplyAction="http://tempuri.org/INewsdeskService/EditCategoryResponse")]
        System.Threading.Tasks.Task<NewsdeskWPFClient.AdminServiceReference.CategoryToClient> EditCategoryAsync(NewsdeskWPFClient.AdminServiceReference.CategoryToClient category, string newName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/DeleteCategory", ReplyAction="http://tempuri.org/INewsdeskService/DeleteCategoryResponse")]
        void DeleteCategory(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/DeleteCategory", ReplyAction="http://tempuri.org/INewsdeskService/DeleteCategoryResponse")]
        System.Threading.Tasks.Task DeleteCategoryAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/GetAllAuthors", ReplyAction="http://tempuri.org/INewsdeskService/GetAllAuthorsResponse")]
        NewsdeskWPFClient.AdminServiceReference.AuthorToClient[] GetAllAuthors(bool onlyNotApproved);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/GetAllAuthors", ReplyAction="http://tempuri.org/INewsdeskService/GetAllAuthorsResponse")]
        System.Threading.Tasks.Task<NewsdeskWPFClient.AdminServiceReference.AuthorToClient[]> GetAllAuthorsAsync(bool onlyNotApproved);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/GetAllArticlesForAnAuthor", ReplyAction="http://tempuri.org/INewsdeskService/GetAllArticlesForAnAuthorResponse")]
        NewsdeskWPFClient.AdminServiceReference.Article[] GetAllArticlesForAnAuthor(NewsdeskWPFClient.AdminServiceReference.Author author);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/GetAllArticlesForAnAuthor", ReplyAction="http://tempuri.org/INewsdeskService/GetAllArticlesForAnAuthorResponse")]
        System.Threading.Tasks.Task<NewsdeskWPFClient.AdminServiceReference.Article[]> GetAllArticlesForAnAuthorAsync(NewsdeskWPFClient.AdminServiceReference.Author author);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/GetAllAuthorsForArticleToClient", ReplyAction="http://tempuri.org/INewsdeskService/GetAllAuthorsForArticleToClientResponse")]
        NewsdeskWPFClient.AdminServiceReference.AuthorToClient[] GetAllAuthorsForArticleToClient(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/GetAllAuthorsForArticleToClient", ReplyAction="http://tempuri.org/INewsdeskService/GetAllAuthorsForArticleToClientResponse")]
        System.Threading.Tasks.Task<NewsdeskWPFClient.AdminServiceReference.AuthorToClient[]> GetAllAuthorsForArticleToClientAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/CreateAuthor", ReplyAction="http://tempuri.org/INewsdeskService/CreateAuthorResponse")]
        int CreateAuthor(NewsdeskWPFClient.AdminServiceReference.Author author);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/CreateAuthor", ReplyAction="http://tempuri.org/INewsdeskService/CreateAuthorResponse")]
        System.Threading.Tasks.Task<int> CreateAuthorAsync(NewsdeskWPFClient.AdminServiceReference.Author author);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/EditAuthor", ReplyAction="http://tempuri.org/INewsdeskService/EditAuthorResponse")]
        NewsdeskWPFClient.AdminServiceReference.Author EditAuthor(NewsdeskWPFClient.AdminServiceReference.Author author);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/EditAuthor", ReplyAction="http://tempuri.org/INewsdeskService/EditAuthorResponse")]
        System.Threading.Tasks.Task<NewsdeskWPFClient.AdminServiceReference.Author> EditAuthorAsync(NewsdeskWPFClient.AdminServiceReference.Author author);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/DeleteAuthor", ReplyAction="http://tempuri.org/INewsdeskService/DeleteAuthorResponse")]
        void DeleteAuthor(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/DeleteAuthor", ReplyAction="http://tempuri.org/INewsdeskService/DeleteAuthorResponse")]
        System.Threading.Tasks.Task DeleteAuthorAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/ValidateAuthorLogin", ReplyAction="http://tempuri.org/INewsdeskService/ValidateAuthorLoginResponse")]
        NewsdeskWPFClient.AdminServiceReference.AuthorToClient ValidateAuthorLogin(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/ValidateAuthorLogin", ReplyAction="http://tempuri.org/INewsdeskService/ValidateAuthorLoginResponse")]
        System.Threading.Tasks.Task<NewsdeskWPFClient.AdminServiceReference.AuthorToClient> ValidateAuthorLoginAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/AuthorIsApproved", ReplyAction="http://tempuri.org/INewsdeskService/AuthorIsApprovedResponse")]
        void AuthorIsApproved(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/AuthorIsApproved", ReplyAction="http://tempuri.org/INewsdeskService/AuthorIsApprovedResponse")]
        System.Threading.Tasks.Task AuthorIsApprovedAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/SetAuthorToEditor", ReplyAction="http://tempuri.org/INewsdeskService/SetAuthorToEditorResponse")]
        void SetAuthorToEditor(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/SetAuthorToEditor", ReplyAction="http://tempuri.org/INewsdeskService/SetAuthorToEditorResponse")]
        System.Threading.Tasks.Task SetAuthorToEditorAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/SetAuthorNotToEditor", ReplyAction="http://tempuri.org/INewsdeskService/SetAuthorNotToEditorResponse")]
        void SetAuthorNotToEditor(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/SetAuthorNotToEditor", ReplyAction="http://tempuri.org/INewsdeskService/SetAuthorNotToEditorResponse")]
        System.Threading.Tasks.Task SetAuthorNotToEditorAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/GetAllArticles", ReplyAction="http://tempuri.org/INewsdeskService/GetAllArticlesResponse")]
        NewsdeskWPFClient.AdminServiceReference.ArticleToClient[] GetAllArticles(bool onlyNotApproved);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/GetAllArticles", ReplyAction="http://tempuri.org/INewsdeskService/GetAllArticlesResponse")]
        System.Threading.Tasks.Task<NewsdeskWPFClient.AdminServiceReference.ArticleToClient[]> GetAllArticlesAsync(bool onlyNotApproved);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/GetAllCategoriesInArticle", ReplyAction="http://tempuri.org/INewsdeskService/GetAllCategoriesInArticleResponse")]
        NewsdeskWPFClient.AdminServiceReference.Category[] GetAllCategoriesInArticle(NewsdeskWPFClient.AdminServiceReference.Article article);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/GetAllCategoriesInArticle", ReplyAction="http://tempuri.org/INewsdeskService/GetAllCategoriesInArticleResponse")]
        System.Threading.Tasks.Task<NewsdeskWPFClient.AdminServiceReference.Category[]> GetAllCategoriesInArticleAsync(NewsdeskWPFClient.AdminServiceReference.Article article);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/GetAllAuthorsForArticle", ReplyAction="http://tempuri.org/INewsdeskService/GetAllAuthorsForArticleResponse")]
        NewsdeskWPFClient.AdminServiceReference.Author[] GetAllAuthorsForArticle(NewsdeskWPFClient.AdminServiceReference.Article article);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/GetAllAuthorsForArticle", ReplyAction="http://tempuri.org/INewsdeskService/GetAllAuthorsForArticleResponse")]
        System.Threading.Tasks.Task<NewsdeskWPFClient.AdminServiceReference.Author[]> GetAllAuthorsForArticleAsync(NewsdeskWPFClient.AdminServiceReference.Article article);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/GetAllCategoriesForArticleToClient", ReplyAction="http://tempuri.org/INewsdeskService/GetAllCategoriesForArticleToClientResponse")]
        NewsdeskWPFClient.AdminServiceReference.CategoryToClient[] GetAllCategoriesForArticleToClient(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/GetAllCategoriesForArticleToClient", ReplyAction="http://tempuri.org/INewsdeskService/GetAllCategoriesForArticleToClientResponse")]
        System.Threading.Tasks.Task<NewsdeskWPFClient.AdminServiceReference.CategoryToClient[]> GetAllCategoriesForArticleToClientAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/CreateArticle", ReplyAction="http://tempuri.org/INewsdeskService/CreateArticleResponse")]
        NewsdeskWPFClient.AdminServiceReference.Article CreateArticle(NewsdeskWPFClient.AdminServiceReference.Article article);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/CreateArticle", ReplyAction="http://tempuri.org/INewsdeskService/CreateArticleResponse")]
        System.Threading.Tasks.Task<NewsdeskWPFClient.AdminServiceReference.Article> CreateArticleAsync(NewsdeskWPFClient.AdminServiceReference.Article article);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/GetArticle", ReplyAction="http://tempuri.org/INewsdeskService/GetArticleResponse")]
        NewsdeskWPFClient.AdminServiceReference.Article GetArticle(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/GetArticle", ReplyAction="http://tempuri.org/INewsdeskService/GetArticleResponse")]
        System.Threading.Tasks.Task<NewsdeskWPFClient.AdminServiceReference.Article> GetArticleAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/UpdateArticle", ReplyAction="http://tempuri.org/INewsdeskService/UpdateArticleResponse")]
        void UpdateArticle(NewsdeskWPFClient.AdminServiceReference.Article Article);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/UpdateArticle", ReplyAction="http://tempuri.org/INewsdeskService/UpdateArticleResponse")]
        System.Threading.Tasks.Task UpdateArticleAsync(NewsdeskWPFClient.AdminServiceReference.Article Article);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/DeleteArticle", ReplyAction="http://tempuri.org/INewsdeskService/DeleteArticleResponse")]
        void DeleteArticle(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/DeleteArticle", ReplyAction="http://tempuri.org/INewsdeskService/DeleteArticleResponse")]
        System.Threading.Tasks.Task DeleteArticleAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/SetArticleIsApproved", ReplyAction="http://tempuri.org/INewsdeskService/SetArticleIsApprovedResponse")]
        void SetArticleIsApproved(int articleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/SetArticleIsApproved", ReplyAction="http://tempuri.org/INewsdeskService/SetArticleIsApprovedResponse")]
        System.Threading.Tasks.Task SetArticleIsApprovedAsync(int articleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/SetArticleIsNotApproved", ReplyAction="http://tempuri.org/INewsdeskService/SetArticleIsNotApprovedResponse")]
        void SetArticleIsNotApproved(int articleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/SetArticleIsNotApproved", ReplyAction="http://tempuri.org/INewsdeskService/SetArticleIsNotApprovedResponse")]
        System.Threading.Tasks.Task SetArticleIsNotApprovedAsync(int articleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/SetAcceptAuthor", ReplyAction="http://tempuri.org/INewsdeskService/SetAcceptAuthorResponse")]
        void SetAcceptAuthor(int authorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/SetAcceptAuthor", ReplyAction="http://tempuri.org/INewsdeskService/SetAcceptAuthorResponse")]
        System.Threading.Tasks.Task SetAcceptAuthorAsync(int authorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/SetNotAcceptAuthor", ReplyAction="http://tempuri.org/INewsdeskService/SetNotAcceptAuthorResponse")]
        void SetNotAcceptAuthor(int authorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskService/SetNotAcceptAuthor", ReplyAction="http://tempuri.org/INewsdeskService/SetNotAcceptAuthorResponse")]
        System.Threading.Tasks.Task SetNotAcceptAuthorAsync(int authorId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INewsdeskServiceChannel : NewsdeskWPFClient.AdminServiceReference.INewsdeskService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NewsdeskServiceClient : System.ServiceModel.ClientBase<NewsdeskWPFClient.AdminServiceReference.INewsdeskService>, NewsdeskWPFClient.AdminServiceReference.INewsdeskService {
        
        public NewsdeskServiceClient() {
        }
        
        public NewsdeskServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NewsdeskServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NewsdeskServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NewsdeskServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void SendNotDeliveredMail() {
            base.Channel.SendNotDeliveredMail();
        }
        
        public System.Threading.Tasks.Task SendNotDeliveredMailAsync() {
            return base.Channel.SendNotDeliveredMailAsync();
        }
        
        public string SendEmailAccountCreated(int id) {
            return base.Channel.SendEmailAccountCreated(id);
        }
        
        public System.Threading.Tasks.Task<string> SendEmailAccountCreatedAsync(int id) {
            return base.Channel.SendEmailAccountCreatedAsync(id);
        }
        
        public string SendEmailToEditorNewAccountCreated() {
            return base.Channel.SendEmailToEditorNewAccountCreated();
        }
        
        public System.Threading.Tasks.Task<string> SendEmailToEditorNewAccountCreatedAsync() {
            return base.Channel.SendEmailToEditorNewAccountCreatedAsync();
        }
        
        public NewsdeskWPFClient.AdminServiceReference.CategoryToClient[] GetAllCategories() {
            return base.Channel.GetAllCategories();
        }
        
        public System.Threading.Tasks.Task<NewsdeskWPFClient.AdminServiceReference.CategoryToClient[]> GetAllCategoriesAsync() {
            return base.Channel.GetAllCategoriesAsync();
        }
        
        public NewsdeskWPFClient.AdminServiceReference.CategoryToClient AddCategory(string NewCategoryName) {
            return base.Channel.AddCategory(NewCategoryName);
        }
        
        public System.Threading.Tasks.Task<NewsdeskWPFClient.AdminServiceReference.CategoryToClient> AddCategoryAsync(string NewCategoryName) {
            return base.Channel.AddCategoryAsync(NewCategoryName);
        }
        
        public NewsdeskWPFClient.AdminServiceReference.CategoryToClient EditCategory(NewsdeskWPFClient.AdminServiceReference.CategoryToClient category, string newName) {
            return base.Channel.EditCategory(category, newName);
        }
        
        public System.Threading.Tasks.Task<NewsdeskWPFClient.AdminServiceReference.CategoryToClient> EditCategoryAsync(NewsdeskWPFClient.AdminServiceReference.CategoryToClient category, string newName) {
            return base.Channel.EditCategoryAsync(category, newName);
        }
        
        public void DeleteCategory(int id) {
            base.Channel.DeleteCategory(id);
        }
        
        public System.Threading.Tasks.Task DeleteCategoryAsync(int id) {
            return base.Channel.DeleteCategoryAsync(id);
        }
        
        public NewsdeskWPFClient.AdminServiceReference.AuthorToClient[] GetAllAuthors(bool onlyNotApproved) {
            return base.Channel.GetAllAuthors(onlyNotApproved);
        }
        
        public System.Threading.Tasks.Task<NewsdeskWPFClient.AdminServiceReference.AuthorToClient[]> GetAllAuthorsAsync(bool onlyNotApproved) {
            return base.Channel.GetAllAuthorsAsync(onlyNotApproved);
        }
        
        public NewsdeskWPFClient.AdminServiceReference.Article[] GetAllArticlesForAnAuthor(NewsdeskWPFClient.AdminServiceReference.Author author) {
            return base.Channel.GetAllArticlesForAnAuthor(author);
        }
        
        public System.Threading.Tasks.Task<NewsdeskWPFClient.AdminServiceReference.Article[]> GetAllArticlesForAnAuthorAsync(NewsdeskWPFClient.AdminServiceReference.Author author) {
            return base.Channel.GetAllArticlesForAnAuthorAsync(author);
        }
        
        public NewsdeskWPFClient.AdminServiceReference.AuthorToClient[] GetAllAuthorsForArticleToClient(int id) {
            return base.Channel.GetAllAuthorsForArticleToClient(id);
        }
        
        public System.Threading.Tasks.Task<NewsdeskWPFClient.AdminServiceReference.AuthorToClient[]> GetAllAuthorsForArticleToClientAsync(int id) {
            return base.Channel.GetAllAuthorsForArticleToClientAsync(id);
        }
        
        public int CreateAuthor(NewsdeskWPFClient.AdminServiceReference.Author author) {
            return base.Channel.CreateAuthor(author);
        }
        
        public System.Threading.Tasks.Task<int> CreateAuthorAsync(NewsdeskWPFClient.AdminServiceReference.Author author) {
            return base.Channel.CreateAuthorAsync(author);
        }
        
        public NewsdeskWPFClient.AdminServiceReference.Author EditAuthor(NewsdeskWPFClient.AdminServiceReference.Author author) {
            return base.Channel.EditAuthor(author);
        }
        
        public System.Threading.Tasks.Task<NewsdeskWPFClient.AdminServiceReference.Author> EditAuthorAsync(NewsdeskWPFClient.AdminServiceReference.Author author) {
            return base.Channel.EditAuthorAsync(author);
        }
        
        public void DeleteAuthor(int id) {
            base.Channel.DeleteAuthor(id);
        }
        
        public System.Threading.Tasks.Task DeleteAuthorAsync(int id) {
            return base.Channel.DeleteAuthorAsync(id);
        }
        
        public NewsdeskWPFClient.AdminServiceReference.AuthorToClient ValidateAuthorLogin(string email, string password) {
            return base.Channel.ValidateAuthorLogin(email, password);
        }
        
        public System.Threading.Tasks.Task<NewsdeskWPFClient.AdminServiceReference.AuthorToClient> ValidateAuthorLoginAsync(string email, string password) {
            return base.Channel.ValidateAuthorLoginAsync(email, password);
        }
        
        public void AuthorIsApproved(int id) {
            base.Channel.AuthorIsApproved(id);
        }
        
        public System.Threading.Tasks.Task AuthorIsApprovedAsync(int id) {
            return base.Channel.AuthorIsApprovedAsync(id);
        }
        
        public void SetAuthorToEditor(int id) {
            base.Channel.SetAuthorToEditor(id);
        }
        
        public System.Threading.Tasks.Task SetAuthorToEditorAsync(int id) {
            return base.Channel.SetAuthorToEditorAsync(id);
        }
        
        public void SetAuthorNotToEditor(int id) {
            base.Channel.SetAuthorNotToEditor(id);
        }
        
        public System.Threading.Tasks.Task SetAuthorNotToEditorAsync(int id) {
            return base.Channel.SetAuthorNotToEditorAsync(id);
        }
        
        public NewsdeskWPFClient.AdminServiceReference.ArticleToClient[] GetAllArticles(bool onlyNotApproved) {
            return base.Channel.GetAllArticles(onlyNotApproved);
        }
        
        public System.Threading.Tasks.Task<NewsdeskWPFClient.AdminServiceReference.ArticleToClient[]> GetAllArticlesAsync(bool onlyNotApproved) {
            return base.Channel.GetAllArticlesAsync(onlyNotApproved);
        }
        
        public NewsdeskWPFClient.AdminServiceReference.Category[] GetAllCategoriesInArticle(NewsdeskWPFClient.AdminServiceReference.Article article) {
            return base.Channel.GetAllCategoriesInArticle(article);
        }
        
        public System.Threading.Tasks.Task<NewsdeskWPFClient.AdminServiceReference.Category[]> GetAllCategoriesInArticleAsync(NewsdeskWPFClient.AdminServiceReference.Article article) {
            return base.Channel.GetAllCategoriesInArticleAsync(article);
        }
        
        public NewsdeskWPFClient.AdminServiceReference.Author[] GetAllAuthorsForArticle(NewsdeskWPFClient.AdminServiceReference.Article article) {
            return base.Channel.GetAllAuthorsForArticle(article);
        }
        
        public System.Threading.Tasks.Task<NewsdeskWPFClient.AdminServiceReference.Author[]> GetAllAuthorsForArticleAsync(NewsdeskWPFClient.AdminServiceReference.Article article) {
            return base.Channel.GetAllAuthorsForArticleAsync(article);
        }
        
        public NewsdeskWPFClient.AdminServiceReference.CategoryToClient[] GetAllCategoriesForArticleToClient(int id) {
            return base.Channel.GetAllCategoriesForArticleToClient(id);
        }
        
        public System.Threading.Tasks.Task<NewsdeskWPFClient.AdminServiceReference.CategoryToClient[]> GetAllCategoriesForArticleToClientAsync(int id) {
            return base.Channel.GetAllCategoriesForArticleToClientAsync(id);
        }
        
        public NewsdeskWPFClient.AdminServiceReference.Article CreateArticle(NewsdeskWPFClient.AdminServiceReference.Article article) {
            return base.Channel.CreateArticle(article);
        }
        
        public System.Threading.Tasks.Task<NewsdeskWPFClient.AdminServiceReference.Article> CreateArticleAsync(NewsdeskWPFClient.AdminServiceReference.Article article) {
            return base.Channel.CreateArticleAsync(article);
        }
        
        public NewsdeskWPFClient.AdminServiceReference.Article GetArticle(int id) {
            return base.Channel.GetArticle(id);
        }
        
        public System.Threading.Tasks.Task<NewsdeskWPFClient.AdminServiceReference.Article> GetArticleAsync(int id) {
            return base.Channel.GetArticleAsync(id);
        }
        
        public void UpdateArticle(NewsdeskWPFClient.AdminServiceReference.Article Article) {
            base.Channel.UpdateArticle(Article);
        }
        
        public System.Threading.Tasks.Task UpdateArticleAsync(NewsdeskWPFClient.AdminServiceReference.Article Article) {
            return base.Channel.UpdateArticleAsync(Article);
        }
        
        public void DeleteArticle(int id) {
            base.Channel.DeleteArticle(id);
        }
        
        public System.Threading.Tasks.Task DeleteArticleAsync(int id) {
            return base.Channel.DeleteArticleAsync(id);
        }
        
        public void SetArticleIsApproved(int articleId) {
            base.Channel.SetArticleIsApproved(articleId);
        }
        
        public System.Threading.Tasks.Task SetArticleIsApprovedAsync(int articleId) {
            return base.Channel.SetArticleIsApprovedAsync(articleId);
        }
        
        public void SetArticleIsNotApproved(int articleId) {
            base.Channel.SetArticleIsNotApproved(articleId);
        }
        
        public System.Threading.Tasks.Task SetArticleIsNotApprovedAsync(int articleId) {
            return base.Channel.SetArticleIsNotApprovedAsync(articleId);
        }
        
        public void SetAcceptAuthor(int authorId) {
            base.Channel.SetAcceptAuthor(authorId);
        }
        
        public System.Threading.Tasks.Task SetAcceptAuthorAsync(int authorId) {
            return base.Channel.SetAcceptAuthorAsync(authorId);
        }
        
        public void SetNotAcceptAuthor(int authorId) {
            base.Channel.SetNotAcceptAuthor(authorId);
        }
        
        public System.Threading.Tasks.Task SetNotAcceptAuthorAsync(int authorId) {
            return base.Channel.SetNotAcceptAuthorAsync(authorId);
        }
    }
}
