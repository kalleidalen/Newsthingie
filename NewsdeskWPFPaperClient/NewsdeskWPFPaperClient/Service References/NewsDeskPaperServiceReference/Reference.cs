//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NewsdeskWPFPaperClient.NewsDeskPaperServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CategoryToClient", Namespace="http://schemas.datacontract.org/2004/07/DomainClasses")]
    [System.SerializableAttribute()]
    public partial class CategoryToClient : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSelectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSelected {
            get {
                return this.IsSelectedField;
            }
            set {
                if ((this.IsSelectedField.Equals(value) != true)) {
                    this.IsSelectedField = value;
                    this.RaisePropertyChanged("IsSelected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArticleToClient", Namespace="http://schemas.datacontract.org/2004/07/DomainClasses")]
    [System.SerializableAttribute()]
    public partial class ArticleToClient : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApproveIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArticleBodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsApprovedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSelectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PreambleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdatedDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApproveId {
            get {
                return this.ApproveIdField;
            }
            set {
                if ((this.ApproveIdField.Equals(value) != true)) {
                    this.ApproveIdField = value;
                    this.RaisePropertyChanged("ApproveId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArticleBody {
            get {
                return this.ArticleBodyField;
            }
            set {
                if ((object.ReferenceEquals(this.ArticleBodyField, value) != true)) {
                    this.ArticleBodyField = value;
                    this.RaisePropertyChanged("ArticleBody");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsApproved {
            get {
                return this.IsApprovedField;
            }
            set {
                if ((this.IsApprovedField.Equals(value) != true)) {
                    this.IsApprovedField = value;
                    this.RaisePropertyChanged("IsApproved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSelected {
            get {
                return this.IsSelectedField;
            }
            set {
                if ((this.IsSelectedField.Equals(value) != true)) {
                    this.IsSelectedField = value;
                    this.RaisePropertyChanged("IsSelected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Preamble {
            get {
                return this.PreambleField;
            }
            set {
                if ((object.ReferenceEquals(this.PreambleField, value) != true)) {
                    this.PreambleField = value;
                    this.RaisePropertyChanged("Preamble");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdatedDate {
            get {
                return this.UpdatedDateField;
            }
            set {
                if ((this.UpdatedDateField.Equals(value) != true)) {
                    this.UpdatedDateField = value;
                    this.RaisePropertyChanged("UpdatedDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NewsDeskPaperServiceReference.INewsdeskPaperService")]
    public interface INewsdeskPaperService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskPaperService/SendEmailHasRegister", ReplyAction="http://tempuri.org/INewsdeskPaperService/SendEmailHasRegisterResponse")]
        string SendEmailHasRegister(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskPaperService/SendEmailHasRegister", ReplyAction="http://tempuri.org/INewsdeskPaperService/SendEmailHasRegisterResponse")]
        System.Threading.Tasks.Task<string> SendEmailHasRegisterAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskPaperService/SendEmailHasUnRegister", ReplyAction="http://tempuri.org/INewsdeskPaperService/SendEmailHasUnRegisterResponse")]
        string SendEmailHasUnRegister(string mail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskPaperService/SendEmailHasUnRegister", ReplyAction="http://tempuri.org/INewsdeskPaperService/SendEmailHasUnRegisterResponse")]
        System.Threading.Tasks.Task<string> SendEmailHasUnRegisterAsync(string mail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskPaperService/GetAllCategories", ReplyAction="http://tempuri.org/INewsdeskPaperService/GetAllCategoriesResponse")]
        NewsdeskWPFPaperClient.NewsDeskPaperServiceReference.CategoryToClient[] GetAllCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskPaperService/GetAllCategories", ReplyAction="http://tempuri.org/INewsdeskPaperService/GetAllCategoriesResponse")]
        System.Threading.Tasks.Task<NewsdeskWPFPaperClient.NewsDeskPaperServiceReference.CategoryToClient[]> GetAllCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskPaperService/GetAllArticlesTopFive", ReplyAction="http://tempuri.org/INewsdeskPaperService/GetAllArticlesTopFiveResponse")]
        NewsdeskWPFPaperClient.NewsDeskPaperServiceReference.ArticleToClient[] GetAllArticlesTopFive();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskPaperService/GetAllArticlesTopFive", ReplyAction="http://tempuri.org/INewsdeskPaperService/GetAllArticlesTopFiveResponse")]
        System.Threading.Tasks.Task<NewsdeskWPFPaperClient.NewsDeskPaperServiceReference.ArticleToClient[]> GetAllArticlesTopFiveAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskPaperService/GetAllArticles", ReplyAction="http://tempuri.org/INewsdeskPaperService/GetAllArticlesResponse")]
        NewsdeskWPFPaperClient.NewsDeskPaperServiceReference.ArticleToClient[] GetAllArticles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskPaperService/GetAllArticles", ReplyAction="http://tempuri.org/INewsdeskPaperService/GetAllArticlesResponse")]
        System.Threading.Tasks.Task<NewsdeskWPFPaperClient.NewsDeskPaperServiceReference.ArticleToClient[]> GetAllArticlesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskPaperService/GetAllArticlesInCategory", ReplyAction="http://tempuri.org/INewsdeskPaperService/GetAllArticlesInCategoryResponse")]
        NewsdeskWPFPaperClient.NewsDeskPaperServiceReference.ArticleToClient[] GetAllArticlesInCategory(int categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskPaperService/GetAllArticlesInCategory", ReplyAction="http://tempuri.org/INewsdeskPaperService/GetAllArticlesInCategoryResponse")]
        System.Threading.Tasks.Task<NewsdeskWPFPaperClient.NewsDeskPaperServiceReference.ArticleToClient[]> GetAllArticlesInCategoryAsync(int categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskPaperService/RegisterSubscriber", ReplyAction="http://tempuri.org/INewsdeskPaperService/RegisterSubscriberResponse")]
        int RegisterSubscriber(string email, int[] categoryIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskPaperService/RegisterSubscriber", ReplyAction="http://tempuri.org/INewsdeskPaperService/RegisterSubscriberResponse")]
        System.Threading.Tasks.Task<int> RegisterSubscriberAsync(string email, int[] categoryIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskPaperService/UnRegisterSubscriber", ReplyAction="http://tempuri.org/INewsdeskPaperService/UnRegisterSubscriberResponse")]
        bool UnRegisterSubscriber(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsdeskPaperService/UnRegisterSubscriber", ReplyAction="http://tempuri.org/INewsdeskPaperService/UnRegisterSubscriberResponse")]
        System.Threading.Tasks.Task<bool> UnRegisterSubscriberAsync(string email);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INewsdeskPaperServiceChannel : global::NewsdeskWPFPaperClient.NewsDeskPaperServiceReference.INewsdeskPaperService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NewsdeskPaperServiceClient : System.ServiceModel.ClientBase<global::NewsdeskWPFPaperClient.NewsDeskPaperServiceReference.INewsdeskPaperService>, global::NewsdeskWPFPaperClient.NewsDeskPaperServiceReference.INewsdeskPaperService {
        
        public NewsdeskPaperServiceClient() {
        }
        
        public NewsdeskPaperServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NewsdeskPaperServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NewsdeskPaperServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NewsdeskPaperServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string SendEmailHasRegister(int id) {
            return base.Channel.SendEmailHasRegister(id);
        }
        
        public System.Threading.Tasks.Task<string> SendEmailHasRegisterAsync(int id) {
            return base.Channel.SendEmailHasRegisterAsync(id);
        }
        
        public string SendEmailHasUnRegister(string mail) {
            return base.Channel.SendEmailHasUnRegister(mail);
        }
        
        public System.Threading.Tasks.Task<string> SendEmailHasUnRegisterAsync(string mail) {
            return base.Channel.SendEmailHasUnRegisterAsync(mail);
        }
        
        public NewsdeskWPFPaperClient.NewsDeskPaperServiceReference.CategoryToClient[] GetAllCategories() {
            return base.Channel.GetAllCategories();
        }
        
        public System.Threading.Tasks.Task<NewsdeskWPFPaperClient.NewsDeskPaperServiceReference.CategoryToClient[]> GetAllCategoriesAsync() {
            return base.Channel.GetAllCategoriesAsync();
        }
        
        public NewsdeskWPFPaperClient.NewsDeskPaperServiceReference.ArticleToClient[] GetAllArticlesTopFive() {
            return base.Channel.GetAllArticlesTopFive();
        }
        
        public System.Threading.Tasks.Task<NewsdeskWPFPaperClient.NewsDeskPaperServiceReference.ArticleToClient[]> GetAllArticlesTopFiveAsync() {
            return base.Channel.GetAllArticlesTopFiveAsync();
        }
        
        public NewsdeskWPFPaperClient.NewsDeskPaperServiceReference.ArticleToClient[] GetAllArticles() {
            return base.Channel.GetAllArticles();
        }
        
        public System.Threading.Tasks.Task<NewsdeskWPFPaperClient.NewsDeskPaperServiceReference.ArticleToClient[]> GetAllArticlesAsync() {
            return base.Channel.GetAllArticlesAsync();
        }
        
        public NewsdeskWPFPaperClient.NewsDeskPaperServiceReference.ArticleToClient[] GetAllArticlesInCategory(int categoryId) {
            return base.Channel.GetAllArticlesInCategory(categoryId);
        }
        
        public System.Threading.Tasks.Task<NewsdeskWPFPaperClient.NewsDeskPaperServiceReference.ArticleToClient[]> GetAllArticlesInCategoryAsync(int categoryId) {
            return base.Channel.GetAllArticlesInCategoryAsync(categoryId);
        }
        
        public int RegisterSubscriber(string email, int[] categoryIds) {
            return base.Channel.RegisterSubscriber(email, categoryIds);
        }
        
        public System.Threading.Tasks.Task<int> RegisterSubscriberAsync(string email, int[] categoryIds) {
            return base.Channel.RegisterSubscriberAsync(email, categoryIds);
        }
        
        public bool UnRegisterSubscriber(string email) {
            return base.Channel.UnRegisterSubscriber(email);
        }
        
        public System.Threading.Tasks.Task<bool> UnRegisterSubscriberAsync(string email) {
            return base.Channel.UnRegisterSubscriberAsync(email);
        }
    }
}
